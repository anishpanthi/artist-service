services:
  postgres:
    image: 'postgres:latest'
    container_name: 'postgres'
    restart: unless-stopped
    environment:
      - 'POSTGRES_DB=music'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5431:5432'

  jaeger-tracing:
    image: 'jaegertracing/all-in-one:latest'
    container_name: 'jaeger'
    restart: unless-stopped
    ports:
      - '16686:16686'
      - '4317:4317'
      - '4318:4318'

  prometheus:
    image: 'prom/prometheus:latest'
    container_name: 'prometheus'
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: 'grafana/grafana:latest'
    container_name: 'grafana'
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost

#  elastic:
#    image: 'elasticsearch:8.13.4'
#    container_name: 'elasticsearch'
#    restart: unless-stopped
#    ports:
#      - '9200:9200'
#      - '9300:9300'
#    networks:
#      - elk-network
#    environment:
#      - discovery.type=single-node
#      - xpack.security.enabled=false
#    volumes:
#      - esdata:/usr/share/elasticsearch/data
#
#  logstash:
#    image: 'logstash:8.13.4'
#    container_name: 'logstash'
#    restart: unless-stopped
#    ports:
#      - '5000:5000'
#      - '9600:9600'
#    volumes:
#      - ./src/main/resources/logstash.yml:/usr/share/logstash/config/logstash.yml
#      - ./src/main/resources:/usr/share/logstash/config
#      - ./logs:/usr/share/logstash/logs
#      - ./src/main/resources/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
#    command: [ "-f", "/usr/share/logstash/config/logstash.conf" ]
#    networks:
#      - elk-network
#
#  kibana:
#    image: 'kibana:8.13.4'
#    container_name: 'kibana'
#    restart: unless-stopped
#    ports:
#      - '5601:5601'
#    networks:
#      - elk-network

#  elastic-apm:
#    image: 'elastic/apm-server:8.13.4'
#    container_name: 'apm-server'
#    user: apm-server
#    restart: unless-stopped
#    ports:
#      - '8200:8200'
#    volumes:
#      - ./src/main/resources/apm-server.docker.yml:/usr/share/apm-server/apm-server.yml:rw
#    networks:
#      - elk-network

#networks:
#  elk-network:
#    driver: bridge

#volumes:
#  esdata:
#    driver: local
